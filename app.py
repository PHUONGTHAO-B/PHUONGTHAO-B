from flask import Flask, render_template, request
import joblib
import pandas as pd
import sys
import traceback

app = Flask(__name__)

# üîπ Load duy nh·∫•t 1 file m√¥ h√¨nh
try:
    model_package = joblib.load('SVM_model.pkl')
except FileNotFoundError as e:
    print(f"L·ªói: Kh√¥ng t√¨m th·∫•y file m√¥ h√¨nh. {str(e)}")
    sys.exit(1)
except Exception as e:
    print("L·ªói khi t·∫£i m√¥ h√¨nh:", e)
    traceback.print_exc()
    sys.exit(1)

@app.route("/", methods=["GET", "POST"])
def index():
    prediction = None
    error_message = None
    if request.method == "POST":
        try:
            # L·∫•y d·ªØ li·ªáu t·ª´ form
            N = float(request.form["N"])
            P = float(request.form["P"])
            K = float(request.form["K"])
            temperature = float(request.form["temperature"])
            humidity = float(request.form["humidity"])
            ph = float(request.form["ph"])
            rainfall = float(request.form["rainfall"])

            # ƒê√≥ng g√≥i d·ªØ li·ªáu v√†o DataFrame
            input_data = pd.DataFrame(
                [[N, P, K, temperature, humidity, ph, rainfall]],
                columns=["N", "P", "K", "temperature", "humidity", "ph", "rainfall"]
            )

            # D·ª± ƒëo√°n tr·ª±c ti·∫øp b·∫±ng pipeline b√™n trong model_package
            pred_index = model_package['pipeline'].predict(input_data)[0]

            # Chuy·ªÉn nh√£n s·ªë sang t√™n c√¢y
            prediction = model_package['label_encoder'].inverse_transform([pred_index])[0]

        except (ValueError, KeyError):
            error_message = "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß v√† ƒë√∫ng ƒë·ªãnh d·∫°ng c√°c th√¥ng s·ªë!"
        except Exception as e:
            error_message = f"L·ªói kh√¥ng x√°c ƒë·ªãnh: {str(e)}"

    return render_template(
        "index.html",
        prediction=prediction,
        error_message=error_message,
        accuracy=model_package.get('accuracy', None)
    )

if __name__ == "__main__":
    app.run(debug=True)
